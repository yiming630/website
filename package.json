{
  "name": "translation-platform",
  "version": "1.0.0",
  "description": "AI-Powered Document Translation Platform",
  "private": true,
  "scripts": {
    "dev": "npm run services:start && concurrently \"npm run backend:dev\" \"npm run frontend:dev\"",
    "dev:full": "npm run services:stop && npm run services:start && concurrently \"npm run backend:dev\" \"npm run frontend:dev\"",
    "dev:full:quiet": "npm run services:stop && npm run services:start:quiet && concurrently \"npm run backend:dev\" \"npm run frontend:dev\"",
    "build": "cd frontend && npm run build",
    "start": "cd frontend && npm run start",
    "frontend:dev": "cd frontend && npm run dev",
    "frontend:install": "cd frontend && npm install --legacy-peer-deps",
    "lint": "cd frontend && npm run lint",
    "backend:start": "cd backend/services/api-gateway && npm start",
    "backend:dev": "cd backend/services/api-gateway && npm run dev",
    "services:start": "./scripts/start-databases-debug.sh",
    "services:start:quiet": "./scripts/start-databases.sh",
    "services:reset": "docker rm -f postgres mongodb 2>/dev/null; docker volume rm postgres_data mongo_data 2>/dev/null || true",
    "services:stop": "./scripts/stop-services-clean.sh",
    "services:wait": "sleep 5 && docker exec postgres pg_isready -U postgres -d translation_platform",
    "services:status": "docker ps --filter name=postgres --filter name=mongodb",
    "ports:clear": "lsof -ti:3000,4002,5432,27017 | xargs kill -9 2>/dev/null || echo 'Ports cleared'",
    "test:user": "curl -X POST http://localhost:4002/graphql -H 'Content-Type: application/json' -d '{\"query\": \"mutation { register(input: { name: \\\"Test User\\\", email: \\\"test@example.com\\\", password: \\\"password123\\\" }) { message user { id name email } tokens { accessToken refreshToken } } }\"}'",
    "test:upload": "curl -X POST http://localhost:4002/api/files/upload -H 'Authorization: Bearer TOKEN_HERE' -F 'file=@test.pdf' -F 'sourceLanguage=en' -F 'targetLanguage=zh' -F 'translationStyle=GENERAL'",
    "test:translate": "curl -X POST http://localhost:4002/graphql -H 'Content-Type: application/json' -d '{\"query\": \"mutation { translateText(input: { text: \\\"Hello world\\\", sourceLanguage: \\\"en\\\", targetLanguage: \\\"zh\\\", style: \\\"GENERAL\\\" }) { originalText translatedText sourceLanguage targetLanguage } }\"}'",
    "db:migrate": "node backend/databases/migrate.js",
    "db:reset": "node database/reset.js",
    "db:init": "node database/init.js",
    "db:setup": "npm run db:reset && npm run db:init && npm run db:migrate"
  },
  "dependencies": {
    "axios": "^1.11.0",
    "bcryptjs": "^2.4.3",
    "clsx": "^2.1.1",
    "concurrently": "^8.2.2",
    "dotenv": "^16.6.1",
    "pg": "^8.16.3",
    "tailwind-merge": "^3.3.1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
